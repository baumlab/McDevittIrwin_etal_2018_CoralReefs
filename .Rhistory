library(ggplot2)
library(gridExtra)
library(grid)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
##put them all together
require(gtable)
legend = gtable_filter(ggplotGrob(may_p2), "guide-box")
grid.draw(legend)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
legend <- g_legend(may_p2)
lwidth <- sum(legend$width)
grid.arrange(arrangeGrob(may_p2+ theme(legend.position="none")
+ annotate("text", x=c(2.05,2.1), y=c(1.5, 1.3), label= c("Disturbance: p=0.0001", "Species: p=0.0007"), size=5),
july_p1 + labs(x="") + annotate("text", x=2.1, y= 1.3, label= "Species: p=0.0001", size=5)
+ theme(legend.position="none"), layout_matrix=rbind(c(1,2),c(1,2))), legend, widths=unit.c(unit(1, "npc") - lwidth, lwidth), nrow=1)
pdf(file="figures/secondmito/top10removed/diversity/combined_alphadiv_for.ms_mayjulyonly_v2.pdf", height=8, width=11, onefile=FALSE)
grid.arrange(arrangeGrob(may_p2+ theme(legend.position="none")
+ annotate("text", x=c(2.05,2.1), y=c(1.5, 1.3), label= c("Disturbance: p=0.0001", "Species: p=0.0007"), size=5),
july_p1 + labs(x="") + annotate("text", x=2.1, y= 1.3, label= "Species: p=0.0001", size=5)
+ theme(legend.position="none"), layout_matrix=rbind(c(1,2),c(1,2))), legend, widths=unit.c(unit(1, "npc") - lwidth, lwidth), nrow=1)
dev.off()
## High heat stress (July) CAP
# ***************************************************
# SECOND MITO
setwd("/Users/jamiemcdevitt-irwin/Documents/Git_Repos/McDevittIrwinetal_Kiritimati16S")
getwd()
# clear my environment
rm(list=ls())
# Installing & Importing  ----------------------------------------------------------
#First we need to install phyloseq
#source("http://bioconductor.org/biocLite.R")
#biocLite("phyloseq")
#now load phyloseq
library("phyloseq")
packageVersion("phyloseq")
library("ggplot2")
packageVersion("ggplot2")
library("scales")
packageVersion("scales")
library("grid")
packageVersion("grid")
theme_set(theme_bw())
# load normalized data
load("data/secondmito/lowreads_pruned/otutable_top10removed_coral_866_july_rel.Rdata") # otu_tablef_no10_coralf_sm_866f_julyf_rel
ls()
sample_sums(otu_tablef_no10_coralf_sm_866f_julyf_rel) # 1
print(otu_tablef_no10_coralf_sm_866f_julyf_rel) # 64 samples, 7146 taxa
# rename the human disturbance levels
as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")[as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")$human_disturbance %in% "Very low", "human_disturbance2"] <- "Low"
as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")$human_disturbance2
as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")[as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")$human_disturbance %in% "Very high", "human_disturbance2"] <- "High"
as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")$human_disturbance2
##################################################
##################################################
# CAP
# backwards stepwise selection of variables
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~ field_host_genus_id + human_disturbance/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nospecies = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~  human_disturbance/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nospecies
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nodist = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~  field_host_genus_id, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nodist
# Full model vs without human disturbance
anova(otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nodist, otu_tablef_no10_coralf_sm_866f_julyf_rel_cap, permutations=9999)
# Number of permutations: 9999
# Model 1: OTU ~ field_host_genus_id
# Model 2: OTU ~ field_host_genus_id + human_disturbance/reef_name
#   ResDf ResChiSquare Df ChiSquare      F Pr(>F)
# 1    62       24.345
# 2    59       21.951  3    2.3932 2.1441  1e-04 ***
# human disturbance/reefname is important
# Full model vs without coral species
anova(otu_tablef_no10_coralf_sm_866f_julyf_rel_cap, otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nospecies, permutations=9999)
# Number of permutations: 9999
# Model 1: OTU ~ field_host_genus_id + human_disturbance/reef_name
# Model 2: OTU ~ human_disturbance/reef_name
#   ResDf ResChiSquare Df ChiSquare      F Pr(>F)
# 1    59       21.951
# 2    60       24.591 -1   -2.6395 7.0944  1e-04 ***
# # important, so keep coral species
# therefore best model is species and disturbance/reefname
##################
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~ field_host_genus_id + human_disturbance2/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap #18.48% explained
p1 = plot_ordination(otu_tablef_no10_coralf_sm_866f_julyf_rel, otu_tablef_no10_coralf_sm_866f_julyf_rel_cap, color="human_disturbance2", shape="field_host_genus_id")+ scale_color_manual(values=c("darkorange2", "darkgoldenrod1"))
p1 = p1 + geom_point(size=3) +stat_ellipse() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(color='Local Disturbance') +
labs(shape='Coral Species') +
scale_shape_discrete(labels = c(expression(italic("Montipora")), expression(italic("Porites"))))
p1
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~ field_host_genus_id + human_disturbance2/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap #18.48% explained
p1 = plot_ordination(otu_tablef_no10_coralf_sm_866f_julyf_rel, otu_tablef_no10_coralf_sm_866f_julyf_rel_cap, color="human_disturbance2", shape="field_host_genus_id")+ scale_color_manual(values=c("darkorange2", "darkgoldenrod1"))
p1 = p1 + geom_point(size=3) +stat_ellipse() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(color='Local Disturbance') +
labs(shape='Coral Species') +
scale_shape_discrete(breaks= c("Porites", "Montipora"), labels = c(expression(italic("Porites")), expression(italic("Montipora"))))
p1
## Low Heat Stress (May) CAP
# relative abundance
# ***************************************************
# SECOND MITO
setwd("/Users/jamiemcdevitt-irwin/Documents/Git_Repos/McDevittIrwinetal_Kiritimati16S")
getwd()
# clear my environment
rm(list=ls())
# Installing & Importing  ----------------------------------------------------------
#First we need to install phyloseq
#source("http://bioconductor.org/biocLite.R")
#biocLite("phyloseq")
#now load phyloseq
library("phyloseq")
packageVersion("phyloseq")
library("ggplot2")
packageVersion("ggplot2")
library("scales")
packageVersion("scales")
library("grid")
packageVersion("grid")
theme_set(theme_bw())
# load normalized data
load("data/secondmito/lowreads_pruned/otutable_top10removed_coral_866_may_rel.Rdata") # otu_tablef_no10_coralf_sm_866f_mayf_rel
ls()
sample_sums(otu_tablef_no10_coralf_sm_866f_mayf_rel) # 1
print(otu_tablef_no10_coralf_sm_866f_mayf_rel) # 39, 6037 taxa
##################################################
##################################################
# CAP
# backwards stepwise selection of variables
otu_tablef_no10_coralf_sm_866f_mayf_rel_cap = ordinate(otu_tablef_no10_coralf_sm_866f_mayf_rel, formula=otu_tablef_no10_coralf_sm_866f_mayf_rel ~ field_host_genus_id + human_disturbance/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_mayf_rel_cap # 27.55
otu_tablef_no10_coralf_sm_866f_mayf_rel_cap_nospecies = ordinate(otu_tablef_no10_coralf_sm_866f_mayf_rel, formula=otu_tablef_no10_coralf_sm_866f_mayf_rel ~ human_disturbance/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_mayf_rel_cap_nospecies
otu_tablef_no10_coralf_sm_866f_mayf_rel_cap_nodist = ordinate(otu_tablef_no10_coralf_sm_866f_mayf_rel, formula=otu_tablef_no10_coralf_sm_866f_mayf_rel ~  field_host_genus_id, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_mayf_rel_cap_nodist
# Full model vs no coral species
anova(otu_tablef_no10_coralf_sm_866f_mayf_rel_cap_nospecies, otu_tablef_no10_coralf_sm_866f_mayf_rel_cap,permutations=9999)
# Model 1: OTU ~ human_disturbance/reef_name
# Model 2: OTU ~ field_host_genus_id + human_disturbance/reef_name
#   ResDf ResChiSquare Df ChiSquare      F Pr(>F)
# 1    35       13.375
# 2    34       11.194  1    2.1809 6.6241  1e-04 ***
# # >
# therefore coral species is important
# Full model vs no human disturbance
anova(otu_tablef_no10_coralf_sm_866f_mayf_rel_cap_nodist, otu_tablef_no10_coralf_sm_866f_mayf_rel_cap, permutations=9999)
# Number of permutations: 9999
# Model 1: OTU ~ field_host_genus_id
# Model 2: OTU ~ field_host_genus_id + human_disturbance/reef_name
#   ResDf ResChiSquare Df ChiSquare      F Pr(>F)
# 1    37       13.059
# 2    34       11.194  3    1.8648 1.8881 0.0046 **
# therefore disturbance is important
# therefore the best model includes: coral species and human disturbance/reef_name
##################################################
#
##################################################
# PLOT
# rename the levels
as(sample_data(otu_tablef_no10_coralf_sm_866f_mayf_rel), "data.frame")[as(sample_data(otu_tablef_no10_coralf_sm_866f_mayf_rel), "data.frame")$human_disturbance %in% "Very low", "human_disturbance2"] <- "Low"
as(sample_data(otu_tablef_no10_coralf_sm_866f_mayf_rel), "data.frame")$human_disturbance2
as(sample_data(otu_tablef_no10_coralf_sm_866f_mayf_rel), "data.frame")[as(sample_data(otu_tablef_no10_coralf_sm_866f_mayf_rel), "data.frame")$human_disturbance %in% "Very high", "human_disturbance2"] <- "High"
as(sample_data(otu_tablef_no10_coralf_sm_866f_mayf_rel), "data.frame")$human_disturbance2
pdf(file="figures/secondmito/top10removed/ordination/CAPgenusdisturbance_reefnested_corals866_may_rel.pdf", height=6, width=6)
otu_tablef_no10_coralf_sm_866f_mayf_rel_cap = ordinate(otu_tablef_no10_coralf_sm_866f_mayf_rel, formula=otu_tablef_no10_coralf_sm_866f_mayf_rel ~ field_host_genus_id + human_disturbance2/reef_name, "CAP", "bray")
p5 = plot_ordination(otu_tablef_no10_coralf_sm_866f_mayf_rel, otu_tablef_no10_coralf_sm_866f_mayf_rel_cap,
color="human_disturbance2", shape="field_host_genus_id") +
scale_color_manual(values=c("darkorange2", "darkgoldenrod1"))
p5 = p5 + geom_point(size=3) + stat_ellipse()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(color='Local Disturbance') + labs(shape='Coral Species') +
scale_shape_discrete(breaks= c("Porites", "Montipora"), labels = c(expression(italic("Porites")), expression(italic("Montipora"))))
p5
otu_tablef_no10_coralf_sm_866f_mayf_rel_cap #27.55
dev.off()
save(p5, file="data/secondmito/lowreads_pruned/maycoral_CAP.RData")
## High heat stress (July) CAP
# ***************************************************
# SECOND MITO
setwd("/Users/jamiemcdevitt-irwin/Documents/Git_Repos/McDevittIrwinetal_Kiritimati16S")
getwd()
# clear my environment
rm(list=ls())
# Installing & Importing  ----------------------------------------------------------
#First we need to install phyloseq
#source("http://bioconductor.org/biocLite.R")
#biocLite("phyloseq")
#now load phyloseq
library("phyloseq")
packageVersion("phyloseq")
library("ggplot2")
packageVersion("ggplot2")
library("scales")
packageVersion("scales")
library("grid")
packageVersion("grid")
theme_set(theme_bw())
# load normalized data
load("data/secondmito/lowreads_pruned/otutable_top10removed_coral_866_july_rel.Rdata") # otu_tablef_no10_coralf_sm_866f_julyf_rel
ls()
sample_sums(otu_tablef_no10_coralf_sm_866f_julyf_rel) # 1
print(otu_tablef_no10_coralf_sm_866f_julyf_rel) # 64 samples, 7146 taxa
# rename the human disturbance levels
as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")[as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")$human_disturbance %in% "Very low", "human_disturbance2"] <- "Low"
as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")$human_disturbance2
as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")[as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")$human_disturbance %in% "Very high", "human_disturbance2"] <- "High"
as(sample_data(otu_tablef_no10_coralf_sm_866f_julyf_rel), "data.frame")$human_disturbance2
##################################################
##################################################
# CAP
# backwards stepwise selection of variables
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~ field_host_genus_id + human_disturbance/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nospecies = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~  human_disturbance/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nospecies
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nodist = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~  field_host_genus_id, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nodist
# Full model vs without human disturbance
anova(otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nodist, otu_tablef_no10_coralf_sm_866f_julyf_rel_cap, permutations=9999)
# Number of permutations: 9999
# Model 1: OTU ~ field_host_genus_id
# Model 2: OTU ~ field_host_genus_id + human_disturbance/reef_name
#   ResDf ResChiSquare Df ChiSquare      F Pr(>F)
# 1    62       24.345
# 2    59       21.951  3    2.3932 2.1441  1e-04 ***
# human disturbance/reefname is important
# Full model vs without coral species
anova(otu_tablef_no10_coralf_sm_866f_julyf_rel_cap, otu_tablef_no10_coralf_sm_866f_julyf_rel_cap_nospecies, permutations=9999)
# Number of permutations: 9999
# Model 1: OTU ~ field_host_genus_id + human_disturbance/reef_name
# Model 2: OTU ~ human_disturbance/reef_name
#   ResDf ResChiSquare Df ChiSquare      F Pr(>F)
# 1    59       21.951
# 2    60       24.591 -1   -2.6395 7.0944  1e-04 ***
# # important, so keep coral species
# therefore best model is species and disturbance/reefname
##################################################
##################################################
# PLOT
pdf(file="figures/secondmito/top10removed/ordination/CAPdistgenus_reefnested_corals866_july_rel.pdf", height=6, width=6)
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap = ordinate(otu_tablef_no10_coralf_sm_866f_julyf_rel, formula=otu_tablef_no10_coralf_sm_866f_julyf_rel ~ field_host_genus_id + human_disturbance2/reef_name, "CAP", "bray")
otu_tablef_no10_coralf_sm_866f_julyf_rel_cap #18.48% explained
p1 = plot_ordination(otu_tablef_no10_coralf_sm_866f_julyf_rel, otu_tablef_no10_coralf_sm_866f_julyf_rel_cap, color="human_disturbance2", shape="field_host_genus_id")+ scale_color_manual(values=c("darkorange2", "darkgoldenrod1"))
p1 = p1 + geom_point(size=3) +stat_ellipse() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(color='Local Disturbance') +
labs(shape='Coral Species') +
scale_shape_discrete(breaks= c("Porites", "Montipora"), labels = c(expression(italic("Porites")), expression(italic("Montipora"))))
p1
dev.off()
save(p1, file="data/secondmito/lowreads_pruned/july_coral_CAP.Rdata")
##################################################
# Combine CAP plots for MS
setwd("/Users/jamiemcdevitt-irwin/Documents/Git_Repos/McDevittIrwinetal_Kiritimati16S")
getwd()
library("ggplot2")
# clear my environment
rm(list=ls())
theme_set(theme_bw())
##############################################################
##############################################################
# May
load("data/secondmito/lowreads_pruned/maycoral_CAP.RData")
ls()
may_p5=p5
may_p5=may_p5 + annotate("text", x=-1.9, y=2.8, label="(a)",fontface=2, size=4.5) +ggtitle("Low heat stress")
# July
load("data/secondmito/lowreads_pruned/july_coral_CAP.Rdata")
ls()
july_p1=p1
july_p1=july_p1 + annotate("text", x=-3.6, y=2.8, label="(b)",fontface=2, size=4.5) + ggtitle("High heat stress")
# shared legend code
library(ggplot2)
library(gridExtra)
library(grid)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
# onefile=FALSE gets rid of the extra blank page, not sure why it was there in the first place. bug in the code?
# found onefile fix on github
pdf(file="figures/secondmito/top10removed/ordination/CAP_combined_mayjuly.pdf", height=8, width=6, onefile=FALSE)
grid_arrange_shared_legend(may_p5, july_p1)
dev.off()
# Combine CAP plots for MS
setwd("/Users/jamiemcdevitt-irwin/Documents/Git_Repos/McDevittIrwinetal_Kiritimati16S")
getwd()
library("ggplot2")
# clear my environment
rm(list=ls())
theme_set(theme_bw())
##############################################################
##############################################################
# May
load("data/secondmito/lowreads_pruned/maycoral_CAP.RData")
ls()
may_p5=p5
may_p5=may_p5 + annotate("text", x=-1.9, y=2.8, label="(a)", size=4.5) +ggtitle("Low heat stress")
# July
load("data/secondmito/lowreads_pruned/july_coral_CAP.Rdata")
ls()
july_p1=p1
july_p1=july_p1 + annotate("text", x=-3.6, y=2.8, label="(b)", size=4.5) + ggtitle("High heat stress")
# shared legend code
library(ggplot2)
library(gridExtra)
library(grid)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
# onefile=FALSE gets rid of the extra blank page, not sure why it was there in the first place. bug in the code?
# found onefile fix on github
pdf(file="figures/secondmito/top10removed/ordination/CAP_combined_mayjuly.pdf", height=8, width=6, onefile=FALSE)
grid_arrange_shared_legend(may_p5, july_p1)
dev.off()
# Microbial Counts
############################
setwd("/Users/jamiemcdevitt-irwin/Documents/Git_Repos/McDevittIrwinetal_Kiritimati16S")
getwd()
# clear my environment
rm(list=ls())
library("grid")
packageVersion("grid")
theme_set(theme_bw())
library("lme4")
library("MASS")
library("ggplot2")
#install.packages("lsmeans")
library("lsmeans")
library("scales")
library("MuMIn")
cells_ml <- read.csv("data/envdata/KI_MicrobialCounts_avg_full.csv")
cells_ml
########################################################
########################################################
# MODEL SELECTION
hist(cells_ml$cells_per_ml)
min(cells_ml$cells_per_ml) # 73180.31
max(cells_ml$cells_per_ml) # 584485.8
qqnorm(cells_ml$cells_per_ml)
cells_ml$Site <- as.factor(cells_ml$Site)
# Model Selection while keeping Site in as a nested effect
# plot the contrasts of site but then do the tukey test on the human disturbance levels
# Pick the best model
model5<- lm(cells_per_ml ~ expedition_number * human_disturbance/Site, data=cells_ml)
summary(model5)# 0.9074
AICc(model5) # 774.565
model6<- lm(cells_per_ml ~ expedition_number + human_disturbance/Site, data=cells_ml) # same with human disturbance
AICc(model6) # 767.2908
summary(model6) # Adjusted R-squared:  0.9074
plot(residuals(model6))
hist(residuals(model6))
plot(model6)
model8<- lm(cells_per_ml ~ expedition_number, data=cells_ml)
AICc(model8) #836.3077
# so the best model is exp + dist/site
model9 <- lm(cells_per_ml ~ expedition_number + human_disturbance/Site, data=cells_ml)
AICc(model9) # 767.2908
summary(model9) # Adjusted R-squared:  0.9074
hist(residuals(model9))
########################################################
########################################################
# POSTHOC CONTRASTS
# can't use nested fixed effect for lsmeans
model11 <- lm(cells_per_ml ~ expedition_number + human_disturbance, data=cells_ml)
AICc(model11) # 780.3822
# overall effect of human disturbance
model11.hd <- lsmeans(model11, "human_disturbance")
model11.hd
pairs(model11.hd)
# > pairs(model11.hd)
#  contrast             estimate       SE df t.ratio p.value
#  Very High - Very Low 288103.5 22974.63 28   12.54  <.0001
# Results are averaged over the levels of: expedition_number
# >
# overall effect of expedition
model11.ex<- lsmeans(model11, "expedition_number")
model11.ex
pairs(model11.ex)
# > pairs(model11.ex)
#  contrast      estimate       SE df t.ratio p.value
#  KI15b - KI15c 33039.63 22974.63 28   1.438  0.1615
# Results are averaged over the levels of: human_disturbance
# >
########################################################
########################################################
# PLOT
model10_plot <- lm(cells_per_ml ~ expedition_number + human_disturbance, data=cells_ml)
model10_dist <- lsmeans(model10_plot, "human_disturbance")
model10_dist
model10_exp <- lsmeans(model10_plot, "expedition_number")
model10_exp
# function to turn lsmeans into a dataframe
lsmeans.table <- function(x) {
slm <- summary(x)
slm_dat <- as.data.frame(slm[])
return(slm_dat)
}
model10_exp_df <- lsmeans.table(model10_exp)
model10_exp_df
model10_dist_df <- lsmeans.table(model10_dist)
model10_dist_df
# change very to high and low
model10_dist_df[model10_dist_df$human_disturbance %in% "Very Low", "human_disturbance2"] <- "Low"
model10_dist_df
model10_dist_df[model10_dist_df$human_disturbance %in% "Very High", "human_disturbance2"] <- "High"
model10_dist_df
library("scales")
# Plot for human disturbance
pdf(file="figures/envdata/counts_disturbance.pdf", height=7, width=7)
p2= ggplot(model10_dist_df, aes(human_disturbance2, lsmean, col=human_disturbance2)) + geom_pointrange(aes(ymin=lower.CL, ymax=upper.CL),size=1, shape=8)
p2= p2 + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y=element_blank(),axis.text=element_text(size=12),axis.title=element_text(size=14))
p2= p2 + labs(x="Local Disturbance") +labs(y="Cells per ml") + labs(colour="Local Disturbance")
p2=p2 + scale_colour_manual(values=c("darkorange2","darkgoldenrod1"))+ scale_y_continuous(labels=scientific,limits = c(50000, 550000))
p2= p2 + scale_x_discrete(limits=c("Low", "High"))
p2
dev.off()
# rename the levels
model10_exp_df[model10_exp_df$expedition_number %in% "KI15b", "Hotspot"] <- "Low"
head(model10_exp_df)
model10_exp_df[model10_exp_df$expedition_number %in% "KI15c", "Hotspot"] <- "High"
head(model10_exp_df)
# change the order
model10_exp_df$Hotspot <- factor(model10_exp_df$Hotspot, levels= c("Low", "High"))
pdf(file="figures/envdata/counts_exp.pdf", height=7, width=7)
p1= ggplot(model10_exp_df, aes(Hotspot, lsmean, col=Hotspot)) + geom_pointrange(aes(ymin=lower.CL, ymax=upper.CL), size=1, shape=8)
p1=p1 + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(x="Heat Stress") +labs(y="Cells per ml") + labs(colour="Human Disturbance") +
scale_y_continuous(labels=scientific, limits = c(50000, 550000)) +
theme_bw() + theme(strip.background = element_blank(),legend.position="none", axis.text=element_text(size=12),axis.title=element_text(size=14),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p1=p1 + scale_colour_manual(values=c("darkblue", "darkred"))
p1
dev.off()
# combine plots: just human disturbance and expedition
p1=p1+ annotate("text", x=.5, y=550000, label="(a)", size=4.5)
p2=p2 + annotate("text", x=.5, y=550000, label="(b)", size=4.5) + annotate("text", x=2.4, y=525000, label="*", size=8)
p1
p2
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
pdf(file="figures/envdata/cellsperml_exp_disturbancelevel.pdf", height=6, width=10)
layout <- matrix(c(1,1,1,2,2,2,2), nrow=1, byrow=TRUE)
multiplot(p1,p2, layout=layout)
dev.off()
########################################################
